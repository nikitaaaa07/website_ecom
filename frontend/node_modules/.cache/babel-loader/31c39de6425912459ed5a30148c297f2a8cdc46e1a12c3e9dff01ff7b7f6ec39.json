{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Myself\\\\Desktop\\\\ccproject\\\\front-end\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [allProduct, setAllProduct] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Promise.all([fetch('http://localhost:4000/allproducts').then(response => response.json()), localStorage.getItem('auth_token') ? fetch('http://localhost:4000/getcart', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'auth-token': localStorage.getItem('auth-token')\n      }\n    }).then(response => response.json()) : Promise.resolve({})]).then(([productsData, cartData]) => {\n      setAllProduct(productsData);\n      setCartItems(cartData);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = allProduct.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: {\n      getTotalCartItems,\n      getTotalCartAmount,\n      allProduct,\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"7f+CCABd3RQNCmc/PkgGb/aTJVM=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","allProduct","setAllProduct","cartItems","setCartItems","loading","setLoading","Promise","all","fetch","then","response","json","localStorage","getItem","method","headers","Accept","resolve","productsData","cartData","catch","error","console","addToCart","itemId","prev","body","JSON","stringify","data","log","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Myself/Desktop/ccproject/front-end/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300 + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [allProduct, setAllProduct] = useState([]);\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            fetch('http://localhost:4000/allproducts').then(response => response.json()),\r\n            localStorage.getItem('auth_token') ?\r\n                fetch('http://localhost:4000/getcart', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'auth-token': localStorage.getItem('auth-token')\r\n                    }\r\n                }).then(response => response.json()) :\r\n                Promise.resolve({})\r\n        ]).then(([productsData, cartData]) => {\r\n            setAllProduct(productsData);\r\n            setCartItems(cartData);\r\n            setLoading(false);\r\n        }).catch(error => {\r\n            console.error('Error fetching data:', error);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'auth-token': localStorage.getItem('auth-token'),\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data));\r\n        }\r\n    }\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'auth-token': localStorage.getItem('auth-token'),\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data));\r\n        }\r\n    }\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                let itemInfo = allProduct.find((product) => product.id === Number(item))\r\n                totalAmount += itemInfo.new_price * cartItems[item];\r\n            }\r\n        }\r\n        return totalAmount;\r\n    }\r\n\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                totalItem += cartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <ShopContext.Provider value={{ getTotalCartItems, getTotalCartAmount, allProduct, cartItems, addToCart, removeFromCart }}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}